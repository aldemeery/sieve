{
    "name": "aldemeery/sieve",
    "description": "A simple, clean and elegant way to filter Eloquent models.",
    "keywords": ["laravel", "eloquent", "filters", "search", "query", "filter", "filtration"],
    "type": "library",
    "license": "MIT",
    "authors": [
        {
            "name": "Osama Aldemeery",
            "email": "aldemeery@gmail.com"
        }
    ],
    "minimum-stability": "stable",
    "require": {
        "php": "^8.2",
        "illuminate/support": "^11.0|^12.0",
        "illuminate/database": "^11.0|^12.0",
        "illuminate/console": "^11.0|^12.0",
        "aldemeery/onion": "^1.0"
    },
    "autoload": {
        "psr-4": {
            "Aldemeery\\Sieve\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\Aldemeery\\Sieve\\": "tests/"
        }
    },
    "extra": {
        "laravel": {
            "providers": [
                "Aldemeery\\Sieve\\SieveServiceProvider"
            ]
        }
    },
    "require-dev": {
        "laravel/pint": "^1.16",
        "laravel/sail": "^1.29",
        "phpstan/phpstan": "^1.11",
        "phpstan/phpstan-phpunit": "^1.4",
        "phpunit/phpunit": "^11.1",
        "squizlabs/php_codesniffer": "^3.10",
        "symfony/var-dumper": "^7.0",
        "thecodingmachine/phpstan-safe-rule": "^1.2",
        "infection/infection": "^0.29.7",
        "mockery/mockery": "^1.6"
    },
    "scripts": {
        "lint": "pint --test",
        "lint:fix": "pint",
        "sniff": "phpcs --extensions=php",
        "sniff:fix": "phpcbf --extensions=php",
        "analyze:phpstan": "phpstan analyse --memory-limit=6G",
        "test": "phpunit",
        "test:mutate": [
            "Composer\\Config::disableProcessTimeout",
            "infection --threads=12"
        ],
        "code:check": [
            "@lint",
            "@sniff",
            "@analyze:phpstan",
            "@test",
            "@test:mutate"
        ]
    },
    "config": {
        "allow-plugins": {
            "infection/extension-installer": true
        }
    }
}
